{"version":3,"file":"Account-af842040.js","sources":["../../node_modules/lucide-react/dist/esm/icons/alert-circle.js","../../node_modules/lucide-react/dist/esm/icons/user-circle.js","../../node_modules/lucide-react/dist/esm/icons/user.js","../../node_modules/date-fns/esm/constants/index.js","../../node_modules/date-fns/esm/differenceInDays/index.js","../../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../../node_modules/date-fns/esm/_lib/roundingMethods/index.js","../../node_modules/date-fns/esm/differenceInHours/index.js","../../node_modules/date-fns/esm/setHours/index.js","../../node_modules/date-fns/esm/setMinutes/index.js","../../src/pages/Account.tsx"],"sourcesContent":["/**\n * lucide-react v0.292.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst AlertCircle = createLucideIcon(\"AlertCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"8\", y2: \"12\", key: \"1pkeuh\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"16\", y2: \"16\", key: \"4dfq90\" }]\n]);\n\nexport { AlertCircle as default };\n//# sourceMappingURL=alert-circle.js.map\n","/**\n * lucide-react v0.292.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst UserCircle = createLucideIcon(\"UserCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"circle\", { cx: \"12\", cy: \"10\", r: \"3\", key: \"ilqhr7\" }],\n  [\n    \"path\",\n    { d: \"M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662\", key: \"154egf\" }\n  ]\n]);\n\nexport { UserCircle as default };\n//# sourceMappingURL=user-circle.js.map\n","/**\n * lucide-react v0.292.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst User = createLucideIcon(\"User\", [\n  [\"path\", { d: \"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\", key: \"975kel\" }],\n  [\"circle\", { cx: \"12\", cy: \"7\", r: \"4\", key: \"17ys0d\" }]\n]);\n\nexport { User as default };\n//# sourceMappingURL=user.js.map\n","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n\n/**\n * Days in 1 year\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * @name daysInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInYear = 365.2425;\n\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInMinute = 60000;\n\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInHour = 3600000;\n\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInSecond = 1000;\n\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\nexport var minTime = -maxTime;\n\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var minutesInHour = 60;\n\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInQuarter = 3;\n\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInYear = 12;\n\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var quartersInYear = 4;\n\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInHour = 3600;\n\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMinute = 60;\n\n/**\n * Seconds in 1 day\n *\n * @name secondsInDay\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInDay = secondsInHour * 24;\n\n/**\n * Seconds in 1 week\n *\n * @name secondsInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInWeek = secondsInDay * 7;\n\n/**\n * Seconds in 1 year\n *\n * @name secondsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInYear = secondsInDay * daysInYear;\n\n/**\n * Seconds in 1 month\n *\n * @name secondsInMonth\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMonth = secondsInYear / 12;\n\n/**\n * Seconds in 1 quarter\n *\n * @name secondsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInQuarter = secondsInMonth * 3;","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function trunc(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n};\n\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import { millisecondsInHour } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport default function differenceInHours(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * const result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import { useAuth } from \"@/contexts/AuthContext\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { supabase } from \"@/lib/supabase/supabase-client\";\nimport { Navigate } from \"react-router-dom\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { format, differenceInDays, differenceInHours, isSameDay, setHours, setMinutes } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { Button } from \"@/components/ui/button\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { Clock, User, Mail, UserCircle, AlertCircle } from \"lucide-react\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { useState } from \"react\";\n\nexport default function Account() {\n  const { user } = useAuth();\n  const [bookingToDelete, setBookingToDelete] = useState<string | null>(null);\n\n  const { data: profile } = useQuery({\n    queryKey: [\"profile\", user?.id],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from(\"profiles\")\n        .select(\"*\")\n        .eq(\"id\", user?.id)\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    enabled: !!user?.id,\n  });\n\n  const { data: bookings, refetch } = useQuery({\n    queryKey: [\"user-bookings\", user?.id],\n    queryFn: async () => {\n      const { data, error } = await supabase\n        .from(\"bookings\")\n        .select(`\n          *,\n          slots (\n            date\n          )\n        `)\n        .eq(\"user_id\", user?.id)\n        .order(\"created_at\", { ascending: false });\n\n      if (error) throw error;\n      return data;\n    },\n    enabled: !!user?.id,\n  });\n\n  const handleCancelBooking = async (bookingId: string) => {\n    try {\n      const { error } = await supabase\n        .from(\"bookings\")\n        .delete()\n        .eq(\"id\", bookingId);\n\n      if (error) {\n        console.error(\"Error deleting booking:\", error);\n        toast({\n          title: \"Erreur\",\n          description: \"Une erreur est survenue lors de l'annulation\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      toast({\n        title: \"Réservation annulée\",\n        description: \"Votre réservation a été annulée avec succès\",\n      });\n      refetch();\n    } catch (error) {\n      console.error(\"Error canceling booking:\", error);\n      toast({\n        title: \"Erreur\",\n        description: \"Une erreur est survenue lors de l'annulation\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setBookingToDelete(null);\n    }\n  };\n\n  const getCircuitName = (number: number) =>\n    number === 1 ? \"Motocross\" : \"Supercross\";\n\n  const getBookingWarningMessage = (bookingDate: string) => {\n    const today = new Date();\n    const reservationDate = new Date(bookingDate);\n    // Set the reservation time to 14:00\n    const reservationDateTime = setMinutes(setHours(reservationDate, 14), 0);\n    const daysUntilReservation = differenceInDays(reservationDateTime, today);\n    const hoursUntilReservation = differenceInHours(reservationDateTime, today);\n\n    if (isSameDay(today, reservationDate)) {\n      return \"⚠️ Attention : Vous annulez une réservation pour aujourd'hui. Cette annulation tardive peut impacter l'organisation.\";\n    } else if (daysUntilReservation < 1) {\n      return `⚠️ Attention : Vous annulez une réservation prévue dans ${hoursUntilReservation} heure${hoursUntilReservation > 1 ? 's' : ''}.`;\n    } else if (daysUntilReservation <= 2) {\n      return `⚠️ Attention : Vous annulez une réservation prévue dans ${daysUntilReservation} jour${daysUntilReservation > 1 ? 's' : ''}.`;\n    }\n    return null;\n  };\n\n  if (!user) {\n    return <Navigate to=\"/auth\" />;\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-6 md:py-8 max-w-4xl\">\n      <h1 className=\"text-2xl md:text-3xl font-bold mb-6 md:mb-8\">Mon compte</h1>\n\n      <div className=\"space-y-4 md:space-y-6\">\n        <Card className=\"w-full\">\n          <CardHeader>\n            <CardTitle className=\"text-xl md:text-2xl flex items-center gap-2\">\n              <UserCircle className=\"h-6 w-6\" />\n              Mon profil\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"flex items-start gap-3\">\n                <User className=\"h-5 w-5 text-muted-foreground mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-primary mb-1\">Prénom</p>\n                  <p className=\"text-muted-foreground\">{profile?.first_name || \"Non renseigné\"}</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start gap-3\">\n                <User className=\"h-5 w-5 text-muted-foreground mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-primary mb-1\">Nom</p>\n                  <p className=\"text-muted-foreground\">{profile?.last_name || \"Non renseigné\"}</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start gap-3 md:col-span-2\">\n                <Mail className=\"h-5 w-5 text-muted-foreground mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-primary mb-1\">Email</p>\n                  <p className=\"text-muted-foreground\">{profile?.email}</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start gap-3 md:col-span-2 pt-2 border-t\">\n                <AlertCircle className=\"h-5 w-5 text-muted-foreground mt-0.5\" />\n                <p className=\"text-sm text-muted-foreground\">\n                  Pour modifier vos informations, veuillez nous contacter via le formulaire de contact.\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"w-full\">\n          <CardHeader>\n            <CardTitle className=\"text-xl md:text-2xl\">Mes réservations</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {!bookings || bookings.length === 0 ? (\n              <p className=\"text-muted-foreground\">\n                Vous n'avez pas encore de réservation.\n              </p>\n            ) : (\n              <div className=\"space-y-4\">\n                {bookings.map((booking) => (\n                  <Card key={booking.id} className=\"overflow-hidden\">\n                    <CardContent className=\"p-4 md:p-6\">\n                      <div className=\"flex flex-col md:flex-row md:justify-between md:items-start gap-4\">\n                        <div className=\"space-y-2\">\n                          <h3 className=\"font-semibold text-base md:text-lg\">\n                            Circuit : {getCircuitName(booking.circuit_number)}\n                          </h3>\n                          <div className=\"space-y-1\">\n                            <p className=\"text-sm text-muted-foreground\">\n                              Date :{\" \"}\n                              {format(\n                                new Date(booking.slots.date),\n                                \"d MMMM yyyy\",\n                                { locale: fr }\n                              )}\n                            </p>\n                            <div className=\"flex items-center text-sm text-muted-foreground\">\n                              <Clock className=\"h-4 w-4 mr-1\" />\n                              <span>14h00 - 18h00</span>\n                            </div>\n                            <p className=\"text-sm text-muted-foreground\">\n                              Nombre de pilotes : {booking.number_of_pilots}\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">\n                              Statut : vérifié\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">\n                              Paiement : sur place\n                            </p>\n                          </div>\n                        </div>\n                        <Button\n                          variant=\"destructive\"\n                          onClick={() => setBookingToDelete(booking.id)}\n                          className=\"w-full md:w-auto bg-red-600 hover:bg-red-700 text-white\"\n                        >\n                          Annuler ma réservation\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <AlertDialog open={!!bookingToDelete} onOpenChange={() => setBookingToDelete(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirmer l'annulation</AlertDialogTitle>\n            <AlertDialogDescription className=\"space-y-4\">\n              <p>Êtes-vous sûr de vouloir annuler cette réservation ?</p>\n              {bookingToDelete && bookings?.find(b => b.id === bookingToDelete)?.slots?.date && (\n                <p className=\"text-yellow-600 dark:text-yellow-500\">\n                  {getBookingWarningMessage(bookings.find(b => b.id === bookingToDelete)?.slots.date)}\n                </p>\n              )}\n              <p className=\"text-sm text-muted-foreground\">\n                Cette action est irréversible.\n              </p>\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Annuler</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={() => bookingToDelete && handleCancelBooking(bookingToDelete)}\n              className=\"bg-red-600 hover:bg-red-700 text-white\"\n            >\n              Confirmer l'annulation\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}\n"],"names":["AlertCircle","createLucideIcon","UserCircle","User","millisecondsInHour","compareLocalAsc","dateLeft","dateRight","diff","differenceInDays","dirtyDateLeft","dirtyDateRight","requiredArgs","toDate","sign","difference","differenceInCalendarDays","isLastDayNotFull","result","differenceInMilliseconds","roundingMap","value","defaultRoundingMethod","getRoundingMethod","method","differenceInHours","options","setHours","dirtyDate","dirtyHours","date","hours","toInteger","setMinutes","dirtyMinutes","minutes","Account","user","useAuth","bookingToDelete","setBookingToDelete","useState","profile","useQuery","data","error","supabase","bookings","refetch","handleCancelBooking","bookingId","toast","getCircuitName","number","getBookingWarningMessage","bookingDate","today","reservationDate","reservationDateTime","daysUntilReservation","hoursUntilReservation","isSameDay","jsxs","jsx","Card","CardHeader","CardTitle","CardContent","Mail","booking","format","fr","Clock","Button","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","_b","_a","b","_c","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","Navigate"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}